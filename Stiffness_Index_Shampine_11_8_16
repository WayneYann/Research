#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Nov  7 17:47:34 2016

@author: andrewalferman
"""

import numpy as np
import matplotlib.pyplot as plt
import scipy as sci
import sympy as sym


def functionone(w, t, fp):
    y1, y2, z1, z2 = w
    a, b, n = fp
    f = [z1,
         (z1 + (b + a*n)*y1)/b,
         z2,
         y1 - z2 - a*y2]
    return f


def fwdeuler():
    pass


def rk4(f):
    return lambda t, y, dt: (
                    lambda dy1: (
                        lambda dy2: (
                            lambda dy3: (
                                lambda dy4: (dy1 + 2*dy2 + 2*dy3 + dy4)/6
                                        )(dt * f(t + dt, y + dy3))
                                    )(dt * f(t + dt/2, y + dy2/2))
                                )(dt * f(t + dt/2, y + dy1/2))
                            )(dt * f(t, y))


def jacobian(a, b, n, x):
    if x is None:
        x = np.zeros(len(a[0]))
    d = np.diag(a)
    r = a - np.diagflat(d)
    for i in range(n):
        x = (b - np.dot(r, x)) / d
    return x


def stiffnessindex(sp, a, b, fx):
    # Unpack the stiffness index parameters (sp)
    tol, order, xi, gamma = sp
    index = tol**(1/(order + 1)) *\
        np.linalg.norm(jacobian(a, b, 25, None)) *\
        np.linalg.norm(fx)**(-1 / (order + 1)) *\
        ((np.abs(xi)**(-1/(order + 1))) / np.abs(gamma))
    return index

# Initial conditions (w)
y1 = 1
y2 = 1
z1 = 0
z2 = 0
w = [y1, y2, z1, z2]

# Function parameters (fp)
fa = 1
fb = 1
fn = 4
fp = [fa, fb, fn]

# Stiffness parameter values (sp)
gamma = 1
xi = 1
order = 1
tolerance = 1 * 10**-6
sp = tolerance, order, xi, gamma

# Matrix of b values to plot for
bm = [0, 100, 10000]

indexvalues = []
for j in bm:
    ivr = []
    xm = []
    for x in range(0, 5, 0.5):
        a, b, fx = functionone()
        ivr.append(stiffnessindex(sp, a, b, x))
        xm.append(x)
    indexvalues.append(ivr)

for i in range(len(bm)):
    plt.plot(x, indexvalues[i], label='b value: {}'.format(bm[i]))
plt.legend(bbox_to_anchor=(1, 1), loc=2)
plt.title('Stiffness Index')
plt.show()
